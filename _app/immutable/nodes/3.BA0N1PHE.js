import{_ as g,f as b,$ as w,s as e,c as t,r as a,a0 as c}from"../chunks/runtime.PpH8XyFI.js";import{a as d,t as m}from"../chunks/disclose-version.BFvvKVF2.js";import"../chunks/legacy.D5B-4bCA.js";import{h as k}from"../chunks/svelte-head.DgLlBBTR.js";import{s as n}from"../chunks/attributes.C_Cpji-P.js";import{c as x}from"../chunks/cultures07.2024.D9-e5wSo.js";const D=g,_=D,S=!0,P=Object.freeze(Object.defineProperty({__proto__:null,csr:_,prerender:S},Symbol.toStringTag,{value:"Module"})),L=""+new URL("../assets/descriptions07.2024.CDBI0yCD.png",import.meta.url).href,E=""+new URL("../assets/imagesNLinks07.2024.D8ozTOSL.png",import.meta.url).href;var I=m('<meta name="description" content="About Lore book website application">'),T=m('<div class="container mx-auto"><h1>TTRPG Lore Book</h1> Website to write and share information about your own settings and ideas. Its\' main roles are for: <p>DM/GM:</p> <ol><li>- Have a place to describe your ideas and get inspired by others to create better worlds and\n			campaigns</li> <li>- For your players to understand better the world that they\'re playing in. It will help them\n			immerse themes into their characters and settings that they\'re put into.</li> <li>- You can control information that your players are able to know and have hidden information\n			about places they visit just by hand to create a lively world</li></ol> <p class="mt-3">Players:</p> <ol><li>- Be able to understand the world to help you create your own unique character living in this place.</li> <li>- Remember the places and events that you witnessed</li> <li>-</li></ol> <p class="text-xl mt-4 text-center">Application overview</p> <p class="mt-2 text-center">Main view of adding new entry. <img class="object-cover" alt="Entries on the Lore book"></p> <p class="mt-6 text-center">Description board. <img class="object-cover" alt="Describing entries in Lore book app"></p> <p class="mt-6 text-center">Adding images and linking cultures to regions. <img class="object-cover" alt="Adding images and relations between entries"></p> <div class="container mx-auto pt-4"><h1>How to run it locally</h1> <div class="text-column pt-4"><p class="text-xl">1. You need to install on your computer:</p> <ol><ul>- Java 17,</ul> <ul>- Node,</ul> <ul>- PostgreSQL</ul></ol> OR using Docker <ol><ul>- Docker</ul></ol></div> <div class="text-column pt-4"><p class="text-xl">2. Create an .env file in main folder with specified values:</p> <ol><ul>- `DBUSERNAME=username` - name of user which have access to database you want to use</ul> <ul>- `DBPASSWORD=yourpassword` - password used for specified user in database</ul> <ul>- `DBURL=name:port` - on which your database function, if you use docker this value should\n					be a name given to container that runs your database, for example "database" as specified\n					in docker-compose.yaml file at line 4.</ul> <ul>- `DBNAME=name` - name of created database, you need to create it before you can run the\n					application. Just an empty database is sufficient</ul></ol> If you want to use https (online hosting): <ol><ul>- `SSLPASSWORD=yourpassword` - password to ssl keystore containing private and public key\n					certificate if you want to run it via internet in https. To generate this keystore I\n					recommend this tutorial <a href="https://medium.com/@mckinseydigital/expose-https-spring-endpoints-using-self-signed-certificate-and-configure-channels-to-verify-the-ed97d626cdea">https://medium.com/@mckinseydigital/expose-https-spring-endpoints-using-self-signed-certificate-and-configure-channels-to-verify-the-ed97d626cdea</a> .</ul></ol></div> <div class="text-column pt-4"><p class="text-xl">3. Create second .env file for frontend folder in location "src/main/frontend/" with values:</p> <ol><li>- `SECURE_LOCAL_STORAGE_HASH_KEY` - private hash key that\'s used to keep token on user\n					site safe. It needs to be at least 128 bites long.</li></ol> If you want to use https (online hosting): <ol><li>- `HTTPS="true"`- information to react to run server in https mode.</li> <li>- `SSL_CRT_FILE` - localization of certification file (public key)</li> <li>- `SSL_KEY_FILE` - localization of private key</li></ol></div> <div class="text-column pt-4"><p class="text-xl">4. To run this by hand:</p> <ol><li>- Open main folder in your IDE and run program from file located in\n					"src/main/java/com.as.dndwebsite/DnDWebsiteApplication". If you want to close it, just\n					exit your IDE or stop it via options available in IDE.</li> <li>- Open interminal frontend folder "DnDWebsite\\src\\main\\frontend" and write to commands\n					`npm install` and after all have been installed `npm start`. If you want to close it,\n					click `ctrl+c` in terminal in which you ran earlier commands.</li></ol> <p class="text-lg">OR using docker:</p> <ol><li>- Create docker image for backend from main folder using `Dockerfile` via command `docker\n					build`</li> <li>- Create docker image for frontend from "src/main/frontend" using the same method as above</li> <li>- Create docker image for database, instruction for that are located in database folder,\n					either follow them or pull database image from docker hub and after that add a new\n					database inside of it named like name you specified before in .env file.</li> <p class="mt-2">When you have them all created as images you can run them via `Docker-compose.yaml` file,\n					but first update names to match those of created images, then run it via command\n					`docker-compose up`. Then in the same terminal you can close them via clicking `ctrl+c`,\n					or if you ran `docker compose up -r` to have free terminal use command `docker-compose\n					stop`. To restart them later use command `docker-compose start`. That\'s it, you have\n					running application where you can describe your world and when you meet for session you\n					can show them what you made.</p></ol></div></div></div> <footer><div class="mt-6">This application is still under development to be able to connect and show everything via\n		internet.</div></footer>',1);function M(u){var s=T();k(v=>{var y=I();w.title="Lore-book",d(v,y)});var r=b(s),o=e(t(r),12),p=e(t(o));n(p,"src",x),a(o);var i=e(o,2),h=e(t(i));n(h,"src",L),a(i);var l=e(i,2),f=e(t(l));n(f,"src",E),a(l),c(2),a(r),c(2),d(u,s)}export{M as component,P as universal};
